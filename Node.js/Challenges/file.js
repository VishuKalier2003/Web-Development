//* FileSystem Synchronous Methods...
import fs from 'fs';

//! Creating a folder...
fs.mkdir('folder', (error) => {       // parameters are folder name and callback...
      if(error)   console.log(error);     //? Callback is not compulsory...
      else  console.log("Folder read successfully !!");
});

//! Creating or Writing a File...
fs.writeFileSync('folder/example.txt', 'This is a text file.'); 
// parameters are file directory including file name and file contents...

//! Appending the File...
fs.appendFileSync('folder/example.txt', 'More data is added to the file !!');
// parameters are file directory including file name and file updated contents...

//! Reading the File...
const data = fs.readFileSync('folder/example.txt', 'utf8', (error, file) => {   //? Callback compulsory...
      if(error)   console.log(error);    // utf8 encoding format...
      else  console.log(file);
});
// parameters are file directory with file name, charset encoding, and callback...
console.log(data);

//! Renaming a File...
fs.renameSync('./folder/example.txt', './folder/example1.txt');
// parameters are file directory with original name and file directory with new name...

//! Removing the File...
fs.unlinkSync('./folder/example1.txt');
// parameter is file directory with file name...

//! Removing the Folder...
fs.rmdir('folder', (error) => {    //? Callback compulsory...
      if(error)   console.log(error);
});
// parameters are folder name and callback...